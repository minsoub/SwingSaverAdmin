plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
    id 'eclipse-wtp'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.co.swingsaver'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}
sourceSets {
 	main { 
 		resources { 
 			srcDirs "src/main/resources" 
 		} 
 	} 
}
repositories {
	mavenCentral()
	jcenter()
}
ext {
    swaggerVersion = '3.0.0'
    openApiVersion = '1.5.8'
    jwtVersion = '0.11.2'
}
dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'	
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.plugin:spring-plugin-core'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	//implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '21.1.0.0'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
	runtimeOnly 'com.oracle.ojdbc:orai18n'
	
    //region jwt
    //jwt
    compile "io.jsonwebtoken:jjwt-api:${jwtVersion}"
    runtime "io.jsonwebtoken:jjwt-impl:${jwtVersion}",
            "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"
    //endregion
    
    compile "com.github.ulisesbocchio:jasypt-spring-boot-starter:1.17"
    
    	
	
	//implementation("org.springdoc:springdoc-openapi-ui:1.4.6")

    //implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.4.6'
    
	// https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations
	//compile group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.1.6'
	// https://mvnrepository.com/artifact/io.swagger/swagger-annotations
	//compile group: 'io.swagger', name: 'swagger-annotations', version: '2.0.0-rc2'
	
    //region swagger
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    implementation "io.springfox:springfox-spring-webmvc:${swaggerVersion}"
    implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
    //endregion	
	
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.security:spring-security-test'
	testImplementation ('org.springframework.boot:spring-boot-starter-test')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    
    implementation 'com.querydsl:querydsl-jpa'
	
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
	testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

test {
	useJUnitPlatform()
}


//region querydsl
def querydslDir = '$buildDir/generated/querydsl'
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//endquerydsl